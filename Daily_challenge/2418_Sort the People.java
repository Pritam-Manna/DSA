class Solution {    public String[] sortPeople(String[] names, int[] heights) {        if(heights.length == 1){            return names;        }else{            mergeSort(names, heights, 0, heights.length-1);            for(int item: heights){                System.out.print(" "+item+" ");            }            return names;        }    }    public static void mergeSort(String [] names, int [] arr, int l, int r){        if(l<r){            int m =  (r + l) / 2;            // System.out.println("l: "+l + ", m: "+m+", r: "+r);            mergeSort(names, arr, l, m);            mergeSort(names, arr, m+1, r);            merge(names, arr, l, m, r);        }    }    public static void merge(String [] names, int [] arr, int l, int m, int r){        int l_len = m - l + 1;        int r_len = r - m;        int [] l_arr = new int [l_len];        int [] r_arr = new int [r_len];        String [] l_names = new String [l_len];        String [] r_names = new String [r_len];                    //copy the arrays         for(int i=0; i<l_len; i++){            l_arr[i] = arr[l+i];            l_names[i] = names[l+i];        }        for(int i=0; i<r_len; i++){            r_arr[i] = arr[m+1+i];            r_names[i] = names[m+1+i];        }                int i= 0, j=0, k=l;        while(i<l_len && j<r_len){            if(l_arr[i]>=r_arr[j]){                arr[k] = l_arr[i];                names[k] = l_names[i];                i++;            }else{                arr[k] = r_arr[j];                names[k] = r_names[j];                j++;            }            k++;        }            while(i<l_len){            arr[k] = l_arr[i];            names[k] = l_names[i];            i++;            k++;        }        while(j<r_len){            arr[k] = r_arr[j];            names[k] = r_names[j];            j++;            k++;        }    }    }